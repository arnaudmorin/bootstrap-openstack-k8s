---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nova-conf
data:
  nova.conf: |
    [DEFAULT]
    #my_ip = 192.168.1.228
    pybasedir = /usr/lib/python3/dist-packages
    bindir = /usr/bin
    state_path = /var/lib/nova
    transport_url = rabbit://openstack:{{.password}}@rabbit
    [api]
    auth_strategy = keystone
    [api_database]
    connection = mysql+pymysql://root:{{.password}}@mysql/nova_api
    os_region_name = RegionOne
    [database]
    connection = mysql+pymysql://root:{{.password}}@mysql/nova
    [glance]
    api_servers = http://glance.{{.domain}}
    [keystone_authtoken]
    auth_url = http://keystone.{{.domain}}/v3
    project_name = service
    project_domain_name = Default
    username = nova
    user_domain_name = Default
    password = {{.password}}
    www_authenticate_uri = http://keystone.{{.domain}}
    region_name = RegionOne
    #memcached_servers = keystone:11211
    auth_type = password
    [neutron]
    default_floating_pool = ext-net
    service_metadata_proxy = true
    metadata_proxy_shared_secret = {{.password}}
    auth_type = password
    auth_url = http://keystone.{{.domain}}/v3
    project_name = service
    project_domain_name = Default
    username = neutron
    user_domain_name = Default
    password = {{.password}}
    service_name = network
    url = http://neutron.{{.domain}}
    region_name = RegionOne
    [oslo_concurrency]
    lock_path = /var/lib/nova/tmp
    [oslo_policy]
    policy_dirs = /etc/nova/policy.d
    [placement]
    auth_type = password
    auth_url = http://keystone.{{.domain}}/v3
    project_name = service
    project_domain_name = Default
    username = placement
    user_domain_name = Default
    password = {{.password}}
    region_name = RegionOne
    [scheduler]
    discover_hosts_in_cells_interval = 60
    [serial_console]
    enabled = true
    [spice]
    enabled = true
    server_listen = 0.0.0.0
    server_proxyclient_address = $my_ip
    [vnc]
    enabled = True
    server_listen = 0.0.0.0
    server_proxyclient_address = $my_ip

---
apiVersion: v1
kind: Service
metadata:
  name: nova-api
spec:
  selector:
    app: nova-api
  ports:
  - port: 8774

---
apiVersion: v1
kind: Service
metadata:
  name: nova-metadata-api
spec:
  selector:
    app: nova-metadata-api
  ports:
  - port: 8775
    nodePort: 30775
    name: nova-metadata-api
  # Nova metadata service is type LoadBalancer in order to be reachable from outside the k8s cluster (used by neutron metadata agents)
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: nova-vnc
spec:
  selector:
    app: nova-vnc
  ports:
  - port: 6080
    nodePort: 30080
    name: nova-vnc
  # Nova vnc service is type LoadBalancer in order to be reachable from outside the k8s cluster (used by clients)
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: nova-spice
spec:
  selector:
    app: nova-spice
  ports:
  - port: 6082
    nodePort: 30082
    name: nova-spice
  # Nova spice service is type LoadBalancer in order to be reachable from outside the k8s cluster (used by clients)
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: nova-serial
spec:
  selector:
    app: nova-serial
  ports:
  - port: 6083
    nodePort: 30083
    name: nova-serial
  # Nova serial service is type LoadBalancer in order to be reachable from outside the k8s cluster (used by clients)
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nova-api
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: nova.{{.domain}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nova-api
            port:
              number: 8774

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-api
  labels:
    app: nova-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-api
  template:
    metadata:
      labels:
        app: nova-api
    spec:
      containers:
      - name: nova-api
        image: arnaudmorin/openstack-nova-api:victoria
        # imagePullPolicy: Always
        ports:
        - containerPort: 8774
        volumeMounts:
        - name: nova-conf
          mountPath: "/etc/nova/nova.conf"
          subPath: "nova.conf"
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-metadata-api
  labels:
    app: nova-metadata-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-metadata-api
  template:
    metadata:
      labels:
        app: nova-metadata-api
    spec:
      containers:
      - name: nova-metadata-api
        image: arnaudmorin/openstack-nova-metadata-api:victoria
        # imagePullPolicy: Always
        ports:
        - containerPort: 8775
        volumeMounts:
        - name: nova-conf
          mountPath: "/etc/nova/nova.conf"
          subPath: "nova.conf"
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-conductor
  labels:
    app: nova-conductor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-conductor
  template:
    metadata:
      labels:
        app: nova-conductor
    spec:
      containers:
      - name: nova-conductor
        image: arnaudmorin/openstack-nova-conductor:victoria
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/etc/nova/nova.conf"
          subPath: "nova.conf"
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-scheduler
  labels:
    app: nova-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-scheduler
  template:
    metadata:
      labels:
        app: nova-scheduler
    spec:
      containers:
      - name: nova-scheduler
        image: arnaudmorin/openstack-nova-scheduler:victoria
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/etc/nova/nova.conf"
          subPath: "nova.conf"
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-vnc
  labels:
    app: nova-vnc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-vnc
  template:
    metadata:
      labels:
        app: nova-vnc
    spec:
      containers:
      - name: nova-vnc
        image: arnaudmorin/openstack-nova-vncproxy:victoria
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/etc/nova/nova.conf"
          subPath: "nova.conf"
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-spice
  labels:
    app: nova-spice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-spice
  template:
    metadata:
      labels:
        app: nova-spice
    spec:
      containers:
      - name: nova-spice
        image: arnaudmorin/openstack-nova-spiceproxy:victoria
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/etc/nova/nova.conf"
          subPath: "nova.conf"
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-serial
  labels:
    app: nova-serial
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-serial
  template:
    metadata:
      labels:
        app: nova-serial
    spec:
      containers:
      - name: nova-serial
        image: arnaudmorin/openstack-nova-serialproxy:victoria
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/etc/nova/nova.conf"
          subPath: "nova.conf"
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf
