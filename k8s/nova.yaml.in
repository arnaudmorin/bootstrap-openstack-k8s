---
apiVersion: v1
kind: Service
metadata:
  name: nova-api
spec:
  selector:
    app: nova-api
  ports:
  - port: 8774

---
apiVersion: v1
kind: Service
metadata:
  name: nova-metadata-api
spec:
  selector:
    app: nova-metadata-api
  ports:
  - port: 8775
    nodePort: 30775
    name: nova-metadata-api
  # Nova metadata service is type LoadBalancer in order to be reachable from outside the k8s cluster (used by neutron metadata agents)
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: nova-vnc
spec:
  selector:
    app: nova-vnc
  ports:
  - port: 6080
    nodePort: 30080
    name: nova-vnc
  # Nova vnc service is type LoadBalancer in order to be reachable from outside the k8s cluster (used by clients)
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: nova-spice
spec:
  selector:
    app: nova-spice
  ports:
  - port: 6082
    nodePort: 30082
    name: nova-spice
  # Nova spice service is type LoadBalancer in order to be reachable from outside the k8s cluster (used by clients)
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: nova-serial
spec:
  selector:
    app: nova-serial
  ports:
  - port: 6083
    nodePort: 30083
    name: nova-serial
  # Nova serial service is type LoadBalancer in order to be reachable from outside the k8s cluster (used by clients)
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nova-api
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: nova.{{.domain}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nova-api
            port:
              number: 8774

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-api
  labels:
    app: nova-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nova-api
  template:
    metadata:
      labels:
        app: nova-api
    spec:
      containers:
      - name: nova-api
        image: arnaudmorin/openstack-nova-api:wallaby
        # imagePullPolicy: Always
        ports:
        - containerPort: 8774
        volumeMounts:
        - name: nova-conf
          mountPath: "/data/"
        env:
        - name: KOLLA_CONFIG_STRATEGY
          value: 'COPY_ONCE'
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-metadata-api
  labels:
    app: nova-metadata-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-metadata-api
  template:
    metadata:
      labels:
        app: nova-metadata-api
    spec:
      containers:
      - name: nova-metadata-api
        image: arnaudmorin/openstack-nova-metadata-api:wallaby
        # imagePullPolicy: Always
        ports:
        - containerPort: 8775
        volumeMounts:
        - name: nova-conf
          mountPath: "/data/"
        env:
        - name: KOLLA_CONFIG_STRATEGY
          value: 'COPY_ONCE'
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-conductor
  labels:
    app: nova-conductor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-conductor
  template:
    metadata:
      labels:
        app: nova-conductor
    spec:
      containers:
      - name: nova-conductor
        image: arnaudmorin/openstack-nova-conductor:wallaby
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/data/"
        env:
        - name: KOLLA_CONFIG_STRATEGY
          value: 'COPY_ONCE'
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-scheduler
  labels:
    app: nova-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-scheduler
  template:
    metadata:
      labels:
        app: nova-scheduler
    spec:
      containers:
      - name: nova-scheduler
        image: arnaudmorin/openstack-nova-scheduler:wallaby
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/data/"
        env:
        - name: KOLLA_CONFIG_STRATEGY
          value: 'COPY_ONCE'
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-vnc
  labels:
    app: nova-vnc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-vnc
  template:
    metadata:
      labels:
        app: nova-vnc
    spec:
      containers:
      - name: nova-vnc
        image: arnaudmorin/openstack-nova-vnc:wallaby
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/data/"
        env:
        - name: KOLLA_CONFIG_STRATEGY
          value: 'COPY_ONCE'
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-spice
  labels:
    app: nova-spice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-spice
  template:
    metadata:
      labels:
        app: nova-spice
    spec:
      containers:
      - name: nova-spice
        image: arnaudmorin/openstack-nova-spice:wallaby
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/data/"
        env:
        - name: KOLLA_CONFIG_STRATEGY
          value: 'COPY_ONCE'
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-serial
  labels:
    app: nova-serial
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nova-serial
  template:
    metadata:
      labels:
        app: nova-serial
    spec:
      containers:
      - name: nova-serial
        image: arnaudmorin/openstack-nova-serial:wallaby
        # imagePullPolicy: Always
        volumeMounts:
        - name: nova-conf
          mountPath: "/data/"
        env:
        - name: KOLLA_CONFIG_STRATEGY
          value: 'COPY_ONCE'
      volumes:
      - name: nova-conf
        configMap:
          name: nova-conf
