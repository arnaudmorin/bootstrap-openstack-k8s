---
- name: Install
  hosts: localhost
  vars_files:
    - ../config/config.yaml
  tasks:
  - name: install openstack client
    apt:
      name: python3-openstackclient python3-osc-placement
      update_cache: yes
      state: latest

  - name: create bash_completion.d
    file:
      path: /etc/bash_completion.d/
      state: directory
      mode: 0755

  - name: install openstack client bash completion
    shell: |
      openstack complete > /etc/bash_completion.d/openstack
    args:
      creates: /etc/bash_completion.d/openstack

  - name: create openrc_admin file
    vars:
      openrc_user: admin
      openrc_password: "{{password}}"
      openrc_project: admin
      openrc_auth_url: "http://keystone.{{domain}}/v3"
    template:
      src: ./files/openrc.j2
      dest: /root/openrc_admin

  - name: create openrc_demo file
    vars:
      openrc_user: demo
      openrc_password: "{{password}}"
      openrc_project: demo
      openrc_auth_url: "http://keystone.{{domain}}/v3"
    template:
      src: ./files/openrc.j2
      dest: /root/openrc_demo

  - name: copy helper script
    copy:
      src: ./files/helper
      dest: /root/helper

  - name: create project service
    shell: |
      source /root/openrc_admin
      openstack project create \
        --domain default \
        --description "Service Project" \
        service
      [ $? -eq 0 ] && touch /root/.ansible_project_service
    args:
      executable: /bin/bash
      creates: /root/.ansible_project_service
  - name: create users for service project
    shell: |
      source /root/openrc_admin
      openstack user create \
        --domain default \
        --password "{{password}}" \
        {{item}}
      [ $? -eq 0 ] && touch /root/.ansible_user_{{item}}
    args:
      executable: /bin/bash
      creates: /root/.ansible_user_{{item}}
    with_items:
      - nova
      - neutron
      - placement
      - glance
      - cinder
      - mistral
      - skyline
  - name: add admin role to users for service project
    shell: |
      source /root/openrc_admin
      openstack role add \
        --project service \
        --user {{item}} \
        admin
      [ $? -eq 0 ] && touch /root/.ansible_role_admin_{{item}}
    args:
      executable: /bin/bash
      creates: /root/.ansible_role_admin_{{item}}
    with_items:
      - nova
      - neutron
      - placement
      - glance
      - cinder
      - mistral
      - skyline
  - name: create services
    shell: |
      source /root/openrc_admin
      openstack service create \
        --name {{item.name}} \
        {{item.type}}
      [ $? -eq 0 ] && touch /root/.ansible_service_{{item.type}}
    args:
      executable: /bin/bash
      creates: /root/.ansible_service_{{item.type}}
    with_items:
      - { name: "nova", type: "compute" }
      - { name: "neutron", type: "network"}
      - { name: "placement", type: "placement"}
      - { name: "glance", type: "image"}
      #- { name: "cinderv2", type: "volumev2"}
      #- { name: "cinderv3", type: "volumev3"}
      #- { name: "mistral", type: "workflowv2"}
  - name: create services endpoints for nova
    shell: |
      source /root/openrc_admin
      openstack endpoint create \
        --region RegionOne \
        compute {{item}} http://nova.{{domain}}/v2.1
      [ $? -eq 0 ] && touch /root/.ansible_endpoint_nova_{{item}}
    args:
      executable: /bin/bash
      creates: /root/.ansible_endpoint_nova_{{item}}
    with_items:
      - public
      - admin
      - internal
  - name: create services endpoints for placement
    shell: |
      source /root/openrc_admin
      openstack endpoint create \
        --region RegionOne \
        placement {{item}} http://placement.{{domain}}
      [ $? -eq 0 ] && touch /root/.ansible_endpoint_placement_{{item}}
    args:
      executable: /bin/bash
      creates: /root/.ansible_endpoint_placement_{{item}}
    with_items:
      - public
      - admin
      - internal
  - name: create services endpoints for glance
    shell: |
      source /root/openrc_admin
      openstack endpoint create \
        --region RegionOne \
        image {{item}} http://glance.{{domain}}
      [ $? -eq 0 ] && touch /root/.ansible_endpoint_glance_{{item}}
    args:
      executable: /bin/bash
      creates: /root/.ansible_endpoint_glance_{{item}}
    with_items:
      - public
      - admin
      - internal
  #- name: create services endpoints for cinder (volumev2)
  #  shell: |
  #    source /root/openrc_admin
  #    openstack endpoint create \
  #      --region RegionOne \
  #      volumev2 {{item}} http://cinder.{{domain}}/v2/%\(project_id\)s
  #    [ $? -eq 0 ] && touch /root/.ansible_endpoint_cinder_{{item}}
  #  args:
  #    executable: /bin/bash
  #    creates: /root/.ansible_endpoint_cinder_v2_{{item}}
  #  with_items:
  #    - public
  #    - admin
  #    - internal
  #- name: create services endpoints for cinder (volumev3)
  #  shell: |
  #    source /root/openrc_admin
  #    openstack endpoint create \
  #      --region RegionOne \
  #      volumev3 {{item}} http://cinder.{{domain}}/v3/%\(project_id\)s
  #    [ $? -eq 0 ] && touch /root/.ansible_endpoint_cinder_{{item}}
  #  args:
  #    executable: /bin/bash
  #    creates: /root/.ansible_endpoint_cinder_v3_{{item}}
  #  with_items:
  #    - public
  #    - admin
  #    - internal
  - name: create services endpoints for neutron
    shell: |
      source /root/openrc_admin
      openstack endpoint create \
        --region RegionOne \
        network {{item}} http://neutron.{{domain}}
      [ $? -eq 0 ] && touch /root/.ansible_endpoint_neutron_{{item}}
    args:
      executable: /bin/bash
      creates: /root/.ansible_endpoint_neutron_{{item}}
    with_items:
      - public
      - admin
      - internal
  #- name: create services endpoints for mistral (workflowv2)
  #  shell: |
  #    source /root/openrc_admin
  #    openstack endpoint create \
  #      --region RegionOne \
  #      workflowv2 {{item}} http://mistral.{{domain}}/v2
  #    [ $? -eq 0 ] && touch /root/.ansible_endpoint_mistral_{{item}}
  #  args:
  #    executable: /bin/bash
  #    creates: /root/.ansible_endpoint_mistral_v2_{{item}}
  #  with_items:
  #    - public
  #    - admin
  #    - internal
  
  - name: create project demo
    shell: |
      source /root/openrc_admin
      openstack project create \
        --domain default \
        --description "Demo Project" \
        demo
      [ $? -eq 0 ] && touch /root/.ansible_project_demo
    args:
      executable: /bin/bash
      creates: /root/.ansible_project_demo
  - name: create demo user
    shell: |
      source /root/openrc_admin
      openstack user create \
        --domain default \
        --password "{{password}}" \
        demo
      [ $? -eq 0 ] && touch /root/.ansible_user_demo
    args:
      executable: /bin/bash
      creates: /root/.ansible_user_demo
  - name: create role user
    shell: |
      source /root/openrc_admin
      openstack role create user
      [ $? -eq 0 ] && touch /root/.ansible_role_create_user
    args:
      executable: /bin/bash
      creates: /root/.ansible_role_create_user
  - name: add user role to demo user for demo project
    shell: |
      source /root/openrc_admin
      openstack role add \
        --project demo \
        --user demo \
        user
      [ $? -eq 0 ] && touch /root/.ansible_role_user_demo
    args:
      executable: /bin/bash
      creates: /root/.ansible_role_user_demo
  - name: add member role to demo user for demo project
    shell: |
      source /root/openrc_admin
      openstack role add \
        --project demo \
        --user demo \
        member
      [ $? -eq 0 ] && touch /root/.ansible_role_member_demo
    args:
      executable: /bin/bash
      creates: /root/.ansible_role_member_demo
